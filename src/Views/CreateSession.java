/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.Common.Report;
import Controllers.Common.ReportController;
import Controllers.Days.DaysController;
import Controllers.Lecturer.LecturerController;
import Controllers.Location.LocationController;
import Controllers.SessionController.SessionController;
import Controllers.Student.StudentController;
import Controllers.Subject.SubjectController;
import Controllers.Tag.TagController;
import Controllers.WorkingDayManagement.WorkingDayManagementController;
import Models.BlockModel;
import Models.DayModel;
import Models.Lecturer;
import Models.ReportCard;
import Models.SessionModel;
import Models.Student;
import Models.SubjectModel;
import Models.TagModel;
import Models.WorkingDayManagemenHasDay2;
import Models.WorkingDayManagementModel;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class CreateSession extends javax.swing.JFrame {

    LecturerController lecturerController;
    SubjectController subjectController;
    TagController tagController;
    LocationController locationController;
    StudentController studentController;
    SessionController sessionController;
    WorkingDayManagementController workingDayManagementController;
    DaysController daysController;
    ReportController reportController;

    ArrayList<Lecturer> lectureArrayList;
    ArrayList<SubjectModel> subjectArrayList;
    ArrayList<TagModel> tagArrayList;
    ArrayList<BlockModel> blockArrayList;
    ArrayList<Student> studentArrayList;
    ArrayList<SessionModel> sessionModels;
    ArrayList<WorkingDayManagemenHasDay2> workingModels;

    ArrayList<ArrayList<ReportCard>> reportList;

    DefaultTableModel sessionTableModel;
    DefaultTableModel lecturerTableModel;

    public CreateSession() {
        initComponents();
        sessions.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        sessions.getTableHeader().setOpaque(false);
        sessions.getTableHeader().setBackground(new Color(32, 136, 203));
        sessions.getTableHeader().setForeground(new Color(255, 255, 255));
        sessions.setRowHeight(25);

        sessionTableModel = (DefaultTableModel) sessions.getModel();
        lecturerTableModel = (DefaultTableModel) lectureTable.getModel();

        lecturerController = new LecturerController();
        subjectController = new SubjectController();
        tagController = new TagController();
        locationController = new LocationController();
        studentController = new StudentController();
        sessionController = new SessionController();
        workingDayManagementController = new WorkingDayManagementController();
        daysController = new DaysController();
        reportController = new ReportController();

        lectureArrayList = new ArrayList<>();
        subjectArrayList = new ArrayList<>();
        tagArrayList = new ArrayList<>();
        blockArrayList = new ArrayList<>();
        studentArrayList = new ArrayList<>();
        sessionModels = new ArrayList<>();
        workingModels = new ArrayList<>();

        reportList = new ArrayList<>();

        loadLectures();
        loadSubjects();
        loadTags();
        loadBlocks();
        loadStudents();
        loadSessions();
        loadWorkingDays();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        noofstudent = new javax.swing.JTextField();
        subjectCodeField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lectureCombo = new javax.swing.JComboBox<>();
        subjectCombo = new javax.swing.JComboBox<>();
        groupCombo = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        tagCombo = new javax.swing.JComboBox<>();
        durationhh = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        roomCombo = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sessions = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lectureTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        roomreportbutton = new javax.swing.JButton();
        studentgroupreport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(245, 245, 245));

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ABC INSTITUE TIME TABLE MANAGEMENT SYSTEM");

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ABC Institute, Sri Lanka");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/abc.png"))); // NOI18N
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(180, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 60));

        jPanel2.setBackground(new java.awt.Color(250, 250, 250));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 535));

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText(" Create a New Session");

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel7.setText(" Subject");

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel8.setText(" Subject Code");

        jLabel10.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel10.setText(" Tag");

        jButton1.setBackground(new java.awt.Color(118, 255, 3));
        jButton1.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Success.png"))); // NOI18N
        jButton1.setText("SAVE");
        jButton1.setToolTipText("");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/hover_btn.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/reset_btn.png"))); // NOI18N
        jButton3.setText("DELETE");
        jButton3.setToolTipText("");
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setFocusPainted(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/hover_btn.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel11.setText(" Number of Students");

        noofstudent.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        noofstudent.setForeground(new java.awt.Color(51, 51, 51));

        subjectCodeField.setEditable(false);
        subjectCodeField.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        subjectCodeField.setForeground(new java.awt.Color(51, 51, 51));
        subjectCodeField.setText("IT2030");

        jLabel15.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel15.setText(" Group ID / Sub Group ID");

        jLabel13.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel13.setText(" Select Lecturer(s)");

        lectureCombo.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        lectureCombo.setForeground(new java.awt.Color(51, 51, 51));
        lectureCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dr. Nuwan Kodagoda" }));

        subjectCombo.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        subjectCombo.setForeground(new java.awt.Color(51, 51, 51));
        subjectCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OOC" }));
        subjectCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                subjectComboItemStateChanged(evt);
            }
        });

        groupCombo.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        groupCombo.setForeground(new java.awt.Color(51, 51, 51));
        groupCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Y1.S1.IT.01" }));

        jLabel16.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel16.setText("Day / Time");

        tagCombo.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        tagCombo.setForeground(new java.awt.Color(51, 51, 51));
        tagCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lecture", "Tutorial", "Practical" }));

        durationhh.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        durationhh.setForeground(new java.awt.Color(51, 51, 51));
        durationhh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jLabel19.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel19.setText("Select Room");

        roomCombo.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        roomCombo.setForeground(new java.awt.Color(51, 51, 51));
        roomCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lecture", "Tutorial", "Practical" }));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Success.png"))); // NOI18N
        jButton4.setText("ADD LECTURER");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/hover_btn.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subjectCodeField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subjectCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(noofstudent)
                    .addComponent(groupCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tagCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(roomCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(durationhh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lectureCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lectureCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subjectCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subjectCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(groupCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noofstudent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(durationhh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 250, 535));

        jLabel12.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Register a New Lecturer");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Created Sessions");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 230, 35));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jScrollPane1.setFocusable(false);

        sessions.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        sessions.setForeground(new java.awt.Color(51, 51, 51));
        sessions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Session ID", "Subject", "Subject Code", "Tag", "Room", "Grp/Sub Grp ID", "No of Students", "Duration"
            }
        ));
        sessions.setGridColor(new java.awt.Color(255, 255, 255));
        sessions.setIntercellSpacing(new java.awt.Dimension(0, 0));
        sessions.setRowHeight(25);
        sessions.setShowVerticalLines(false);
        sessions.getTableHeader().setReorderingAllowed(false);
        sessions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sessionsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sessions);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 520, 220));

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Session Details");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 230, 35));

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 520, 10));

        jLabel9.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Selected Lecturers");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 230, 35));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);
        jScrollPane2.setViewportBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jScrollPane2.setFocusable(false);

        lectureTable.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        lectureTable.setForeground(new java.awt.Color(51, 51, 51));
        lectureTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Lecturer Name"
            }
        ));
        lectureTable.setGridColor(new java.awt.Color(255, 255, 255));
        lectureTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        lectureTable.setRowHeight(25);
        lectureTable.setShowVerticalLines(false);
        lectureTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(lectureTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 520, 80));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/reset_btn.png"))); // NOI18N
        jButton2.setText("LECTURE REPORT");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusPainted(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setOpaque(false);
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/hover_btn.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 540, 130, 30));

        roomreportbutton.setBackground(new java.awt.Color(255, 255, 255));
        roomreportbutton.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        roomreportbutton.setForeground(new java.awt.Color(255, 255, 255));
        roomreportbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/reset_btn.png"))); // NOI18N
        roomreportbutton.setText("ROOM REPORT");
        roomreportbutton.setBorderPainted(false);
        roomreportbutton.setContentAreaFilled(false);
        roomreportbutton.setFocusPainted(false);
        roomreportbutton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        roomreportbutton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/hover_btn.png"))); // NOI18N
        roomreportbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomreportbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(roomreportbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 540, 120, 30));

        studentgroupreport.setBackground(new java.awt.Color(255, 255, 255));
        studentgroupreport.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        studentgroupreport.setForeground(new java.awt.Color(255, 255, 255));
        studentgroupreport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/reset_btn.png"))); // NOI18N
        studentgroupreport.setText("STUDENT REPORT");
        studentgroupreport.setBorderPainted(false);
        studentgroupreport.setContentAreaFilled(false);
        studentgroupreport.setFocusPainted(false);
        studentgroupreport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        studentgroupreport.setOpaque(false);
        studentgroupreport.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/hover_btn.png"))); // NOI18N
        studentgroupreport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentgroupreportActionPerformed(evt);
            }
        });
        jPanel1.add(studentgroupreport, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 540, 130, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        this.setVisible(false);
        Dashboard d = new Dashboard();
        d.setVisible(true);
    }//GEN-LAST:event_jLabel14MouseClicked

    private void subjectComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subjectComboItemStateChanged
        if (subjectCombo.getItemCount() > 0) {
            subjectCodeField.setText(subjectArrayList.get(subjectCombo.getSelectedIndex()).getSubject_code());
        }
    }//GEN-LAST:event_subjectComboItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (lectureCombo.getSelectedIndex() > -1 && subjectCombo.getSelectedIndex() > -1 && tagCombo.getSelectedIndex() > -1 && roomCombo.getSelectedIndex() > -1 && durationhh.getSelectedIndex() > -1 && groupCombo.getSelectedIndex() > -1 && !noofstudent.getText().isEmpty()) {

            if (sessionController.validate3(lectureArrayList.get(lectureCombo.getSelectedIndex()).getEmployee_id(), workingModels.get(durationhh.getSelectedIndex()).getId()) == true) {
                if (sessionController.validate2(blockArrayList.get(roomCombo.getSelectedIndex()).getBb_id(), workingModels.get(durationhh.getSelectedIndex()).getId())) {
                    if (sessionController.validate1(lectureArrayList.get(lectureCombo.getSelectedIndex()).getEmployee_id(), studentArrayList.get(groupCombo.getSelectedIndex()).getStudent_id(), workingModels.get(durationhh.getSelectedIndex()).getId()) == true) {

                        if (sessionController.saveSession(new SessionModel(Integer.parseInt(noofstudent.getText()), workingModels.get(durationhh.getSelectedIndex()), subjectArrayList.get(subjectCombo.getSelectedIndex()), tagArrayList.get(tagCombo.getSelectedIndex()), studentArrayList.get(groupCombo.getSelectedIndex()), 1, blockArrayList.get(roomCombo.getSelectedIndex()), lectureArrayList.get(lectureCombo.getSelectedIndex()))) == 1) {
                            JOptionPane.showMessageDialog(this, "Saved Successfully");
                            clearAll();
                            loadSessions();
                        } else {
                            JOptionPane.showMessageDialog(this, "Something Wrong");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Already Exists");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Room and Timeslot full");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Lecture Exists For That Slot");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please fill all fields");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sessionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sessionsMouseClicked
        if (sessions.getSelectedRow() > -1) {
            clearAll();

            loadLectures(sessionController.loadLectures(sessionModels.get(sessions.getSelectedRow()).getSession_id()));
        }
    }//GEN-LAST:event_sessionsMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (sessions.getSelectedRow() > -1) {

            clearAll();

            sessionController.deleteSession(sessionModels.get(sessions.getSelectedRow()).getSession_id());

            loadSessions();

            JOptionPane.showMessageDialog(this, "Deleted");
        } else {
            JOptionPane.showMessageDialog(this, "Please select data to delete");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if (lectureCombo.getSelectedIndex() > -1) {

                reportList.clear();

                ArrayList<DayModel> daysArrayList = reportController.getDays();

                ArrayList<WorkingDayManagementModel> workingDayManagementModels = workingDayManagementController.loadWorkingDayManagement();

                for (WorkingDayManagementModel temp1 : workingDayManagementModels) {
                    ArrayList<ReportCard> sample = new ArrayList<>();
                    sample.add(new ReportCard(temp1.getStarting_time(), "", "", "")); //time

                    for (DayModel dayModel : daysArrayList) {
                        boolean dayCheck1 = true;
                        for (SessionModel sessionModel : sessionModels) {

                            ArrayList<Lecturer> tempLec = sessionController.loadLectures(sessionModel.getSession_id());

                            String tempLecContent = "";

                            if (tempLec.size() > 1) {
                                int lecIndex = 0;
                                for (Lecturer l : tempLec) {
                                    tempLecContent += l.getName();
                                    if (tempLec.size() - 1 > lecIndex) {
                                        tempLecContent += ",";
                                    }
                                    lecIndex++;
                                }
                                tempLecContent += "<br>";
                            }

                            if (sessionController.isLectureForThisSession(sessionModel.getSession_id(), lectureArrayList.get(lectureCombo.getSelectedIndex()).getEmployee_id()) && dayModel.getDay_id() == sessionModel.getDuration().getDays_day_id().getDay_id() && temp1.getWdm_id() == sessionModel.getDuration().getWorking_day_management_wdm_id().getWdm_id()) {
                                sample.add(new ReportCard(tempLecContent + "" + sessionModel.getSubject_id().getSubject_code() + " (" + sessionModel.getTag_id().getTag_name() + ")", sessionModel.getStudent_id().getGroup_id() + " (" + sessionModel.getSubject_id().getSubject_name() + ")", sessionModel.getBuilding_block_bb_id().getBuilding_block_name(), "LT,LS"));
                                dayCheck1 = false;

                                break;
                            }

                        }

                        if (dayCheck1) {
                            sample.add(new ReportCard("", "", "", ""));
                        }
                    }

                    reportList.add(sample); //Data Row
                }

                printReport(lectureArrayList.get(lectureCombo.getSelectedIndex()).getName(), reportList, daysArrayList);
            } else {

                JOptionPane.showMessageDialog(this, "Select Lecture");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Something Wrong");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void roomreportbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomreportbuttonActionPerformed
        try {
            if (roomCombo.getSelectedIndex() > -1) {

                reportList.clear();

                ArrayList<DayModel> daysArrayList = reportController.getDays();

                ArrayList<WorkingDayManagementModel> workingDayManagementModels = workingDayManagementController.loadWorkingDayManagement();

                for (WorkingDayManagementModel temp1 : workingDayManagementModels) {
                    ArrayList<ReportCard> sample = new ArrayList<>();
                    sample.add(new ReportCard(temp1.getStarting_time(), "", "", "")); //time

                    for (DayModel dayModel : daysArrayList) {
                        boolean dayCheck1 = true;
                        for (SessionModel sessionModel : sessionModels) {

                            ArrayList<Lecturer> tempLec = sessionController.loadLectures(sessionModel.getSession_id());

                            String tempLecContent = "";

                            if (tempLec.size() > 1) {
                                int lecIndex = 0;
                                for (Lecturer l : tempLec) {
                                    tempLecContent += l.getName();
                                    if (tempLec.size() - 1 > lecIndex) {
                                        tempLecContent += ",";
                                    }
                                    lecIndex++;
                                }
                                tempLecContent += "<br>";
                            }

                            if (sessionModel.getBuilding_block_bb_id().getBb_id() == blockArrayList.get(roomCombo.getSelectedIndex()).getBb_id() && dayModel.getDay_id() == sessionModel.getDuration().getDays_day_id().getDay_id() && temp1.getWdm_id() == sessionModel.getDuration().getWorking_day_management_wdm_id().getWdm_id()) {
                                sample.add(new ReportCard(tempLecContent + "" + sessionModel.getSubject_id().getSubject_code() + " (" + sessionModel.getTag_id().getTag_name() + ")", sessionModel.getStudent_id().getGroup_id() + " (" + sessionModel.getSubject_id().getSubject_name() + ")", sessionModel.getBuilding_block_bb_id().getBuilding_block_name(), "LT,LS"));
                                dayCheck1 = false;

                                break;
                            }

                        }

                        if (dayCheck1) {
                            sample.add(new ReportCard("", "", "", ""));
                        }
                    }

                    reportList.add(sample); //Data Row
                }

                printReport(blockArrayList.get(roomCombo.getSelectedIndex()).getBuilding_block_name(), reportList, daysArrayList);
            } else {

                JOptionPane.showMessageDialog(this, "Select Room");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Something Wrong");
        }
    }//GEN-LAST:event_roomreportbuttonActionPerformed

    private void studentgroupreportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentgroupreportActionPerformed
        try {
            if (roomCombo.getSelectedIndex() > -1) {

                reportList.clear();

                ArrayList<DayModel> daysArrayList = reportController.getDays();

                ArrayList<WorkingDayManagementModel> workingDayManagementModels = workingDayManagementController.loadWorkingDayManagement();

                for (WorkingDayManagementModel temp1 : workingDayManagementModels) {
                    ArrayList<ReportCard> sample = new ArrayList<>();
                    sample.add(new ReportCard(temp1.getStarting_time(), "", "", "")); //time

                    for (DayModel dayModel : daysArrayList) {
                        boolean dayCheck1 = true;
                        for (SessionModel sessionModel : sessionModels) {

                            ArrayList<Lecturer> tempLec = sessionController.loadLectures(sessionModel.getSession_id());

                            String tempLecContent = "";

                            if (tempLec.size() > 1) {
                                int lecIndex = 0;
                                for (Lecturer l : tempLec) {
                                    tempLecContent += l.getName();
                                    if (tempLec.size() - 1 > lecIndex) {
                                        tempLecContent += ",";
                                    }
                                    lecIndex++;
                                }
                                tempLecContent += "<br>";
                            }

                            System.out.println("Stu Id " + sessionModel.getStudent_id().getStudent_id());
                            System.out.println("Stu Id " + studentArrayList.get(groupCombo.getSelectedIndex()).getStudent_id());

                            if (studentArrayList.get(groupCombo.getSelectedIndex()).getStudent_id() == sessionModel.getStudent_id().getStudent_id() && dayModel.getDay_id() == sessionModel.getDuration().getDays_day_id().getDay_id() && temp1.getWdm_id() == sessionModel.getDuration().getWorking_day_management_wdm_id().getWdm_id()) {
                                sample.add(new ReportCard(tempLecContent + "" + sessionModel.getSubject_id().getSubject_code() + " (" + sessionModel.getTag_id().getTag_name() + ")", sessionModel.getStudent_id().getGroup_id() + " (" + sessionModel.getSubject_id().getSubject_name() + ")", sessionModel.getBuilding_block_bb_id().getBuilding_block_name(), "LT,LS"));
                                dayCheck1 = false;

                                break;
                            }

                        }

                        if (dayCheck1) {
                            sample.add(new ReportCard("", "", "", ""));
                        }
                    }

                    reportList.add(sample); //Data Row
                }

                printReport(studentArrayList.get(groupCombo.getSelectedIndex()).getGroup_id() + " - " + studentArrayList.get(groupCombo.getSelectedIndex()).getSub_group_id(), reportList, daysArrayList);
            } else {

                JOptionPane.showMessageDialog(this, "Select Room");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Something Wrong");
        }
    }//GEN-LAST:event_studentgroupreportActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (sessions.getSelectedRow() > -1) {

            SessionModel sessionModel = sessionModels.get(sessions.getSelectedRow());

            if (sessionController.validate1(lectureArrayList.get(lectureCombo.getSelectedIndex()).getEmployee_id(), sessionModel.getStudent_id().getStudent_id(), sessionModel.getDuration().getId()) == true) {
                sessionController.saveLectureToSession(lectureArrayList.get(lectureCombo.getSelectedIndex()).getEmployee_id(), sessionModel.getSession_id());

                loadSessions();

                JOptionPane.showMessageDialog(this, "Added");

                clearAll();
            } else {
                JOptionPane.showMessageDialog(this, "Already Exists");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please select data to add");
        }    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void printReport(String header, ArrayList<ArrayList<ReportCard>> arrayList, ArrayList<DayModel> daysArrayList) {
        try {
            String content = "<center><h2 class=\"fontStyle\">" + header + "</h2></center>"
                    + "<table id=\"customers\">"
                    + "<tr><th>Time \\ Day</th>";

            for (DayModel dayModel : daysArrayList) {
                content += "<th>" + dayModel.getDay_name() + "</th>";
            }
            content += "</tr>";

            for (ArrayList<ReportCard> main : arrayList) {
                content += "<tr>\n";
                for (ReportCard sub : main) {
                    content += "            <td>\n"
                            + "                " + sub.getParam1() + "\n"
                            + "                <br>" + sub.getParam2() + "\n"
                            + "                <br>" + sub.getParam3() + "\n"
                            + "                <br>" + sub.getParam4() + "\n"
                            + "            </td>\n";
                }

                content += "        </tr>";
            }

            content += "</table>";

            new Report().genarateAndOpen(content);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Something Wrong");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateSession().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> durationhh;
    private javax.swing.JComboBox<String> groupCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> lectureCombo;
    private javax.swing.JTable lectureTable;
    private javax.swing.JTextField noofstudent;
    private javax.swing.JComboBox<String> roomCombo;
    private javax.swing.JButton roomreportbutton;
    private javax.swing.JTable sessions;
    private javax.swing.JButton studentgroupreport;
    private javax.swing.JTextField subjectCodeField;
    private javax.swing.JComboBox<String> subjectCombo;
    private javax.swing.JComboBox<String> tagCombo;
    // End of variables declaration//GEN-END:variables

    private void loadLectures() {
        lectureArrayList.clear();
        lectureArrayList = lecturerController.getAll();
        lectureCombo.removeAllItems();
        lectureArrayList.forEach((action) -> lectureCombo.addItem(action.getName()));
    }

    private void loadSubjects() {
        subjectArrayList.clear();
        subjectArrayList = subjectController.getAll();
        subjectCombo.removeAllItems();
        subjectArrayList.forEach((action) -> subjectCombo.addItem(action.getSubject_name()));
    }

    private void loadTags() {
        tagArrayList.clear();
        tagArrayList = tagController.getAll();
        tagCombo.removeAllItems();
        tagArrayList.forEach((action) -> tagCombo.addItem(action.getTag_name()));
    }

    private void loadBlocks() {
        blockArrayList.clear();
        blockArrayList = locationController.getBlocksWithLocations();
        roomCombo.removeAllItems();
        blockArrayList.forEach((action) -> roomCombo.addItem(action.getLocationModel().getBuilding_name() + " - " + action.getBuilding_block_name()));
    }

    private void loadStudents() {
        studentArrayList.clear();
        studentArrayList = studentController.getStudents();
        groupCombo.removeAllItems();
        studentArrayList.forEach((action) -> groupCombo.addItem(action.getGroup_id() + " / " + action.getSub_group_id()));
    }

    private void loadSessions() {
        sessionTableModel.setRowCount(0);
        sessionModels.clear();
        sessionModels = sessionController.getSessions();
        sessionModels.forEach((data) -> {
            Vector vectorData = new Vector();
            vectorData.add(data.getSession_id());
            vectorData.add(data.getSubject_id().getSubject_name());
            vectorData.add(data.getSubject_id().getSubject_code());
            vectorData.add(data.getTag_id().getTag_name());
            vectorData.add(data.getBuilding_block_bb_id().getBuilding_block_name());
            vectorData.add(data.getStudent_id().getGroup_id() + " / " + data.getStudent_id().getSub_group_id());
            vectorData.add(data.getNo_of_students());
            vectorData.add(data.getDuration().getDays_day_id().getDay_name() + " - " + data.getDuration().getWorking_day_management_wdm_id().getStarting_time() + " to " + data.getDuration().getWorking_day_management_wdm_id().getEnding_time());

            sessionTableModel.addRow(vectorData);
        });

    }

    private void loadLectures(ArrayList<Lecturer> lecturers) {
        lecturerTableModel.setRowCount(0);

        lecturers.forEach((action) -> {
            Vector vectorData = new Vector();
            vectorData.add(action.getEmployee_id());
            vectorData.add(action.getName());

            lecturerTableModel.addRow(vectorData);
        });

    }

    private void clearAll() {
        lectureCombo.setSelectedIndex(0);
        subjectCombo.setSelectedIndex(0);
        noofstudent.setText("");
        tagCombo.setSelectedIndex(0);
        roomCombo.setSelectedIndex(0);
        groupCombo.setSelectedIndex(0);
        durationhh.setSelectedIndex(0);
    }

    private void loadWorkingDays() {
        workingModels.clear();
        workingModels = workingDayManagementController.getRecords();
        durationhh.removeAllItems();
        workingModels.forEach((action) -> durationhh.addItem(action.getDays_day_id().getDay_name() + " - " + action.getWorking_day_management_wdm_id().getStarting_time() + " to " + action.getWorking_day_management_wdm_id().getEnding_time()));
    }
}
